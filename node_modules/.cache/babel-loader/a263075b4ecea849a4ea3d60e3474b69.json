{"ast":null,"code":"import _slicedToArray from \"/Users/JuanX/projects/juanx-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/JuanX/projects/juanx-app/src/components/Counter/index.js\";\nimport React, { useState, Fragment } from \"react\";\nimport PropTypes from 'prop-types';\nimport PlusIcon from \"./images/plusicon.png\";\nimport MinusIcon from \"./images/minusicon.png\";\n\nconst Counter = ({\n  message,\n  dateText,\n  min,\n  max,\n  onChangeCount,\n  initialValue\n}) => {\n  const _useState = useState(initialValue),\n        _useState2 = _slicedToArray(_useState, 2),\n        count = _useState2[0],\n        setCount = _useState2[1];\n\n  const onSetCount = (limit, func) => {\n    const newCount = limit ? count : func;\n    setCount(newCount);\n    onChangeCount(newCount); // callback\n  };\n\n  const renderButton = (source, cant, func) => {\n    const limit = count === cant;\n    return React.createElement(\"button\", {\n      disabled: limit,\n      onClick: () => onSetCount(limit, func),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      style: {\n        opacity: limit ? 0.1 : 1\n      },\n      src: source,\n      alt: \"icon\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }));\n  };\n\n  return React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, message), React.createElement(\"div\", {\n    style: {\n      flex: 1,\n      justifyContent: \"center\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, renderButton(MinusIcon, min, count - 1), React.createElement(\"p\", {\n    style: {\n      fontSize: 30,\n      fontWeight: 'bold'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, count), renderButton(PlusIcon, max, count + 1)), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, dateText)));\n};\n\nCounter.propTypes = {\n  message: PropTypes.string,\n  onChangeCount: PropTypes.func,\n  initialValue: PropTypes.number // etc..\n\n};\nexport default Counter;","map":{"version":3,"sources":["/Users/JuanX/projects/juanx-app/src/components/Counter/index.js"],"names":["React","useState","Fragment","PropTypes","PlusIcon","MinusIcon","Counter","message","dateText","min","max","onChangeCount","initialValue","count","setCount","onSetCount","limit","func","newCount","renderButton","source","cant","opacity","flex","justifyContent","fontSize","fontWeight","propTypes","string","number"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,QAA1B,QAA0C,OAA1C;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,QAAP,MAAqB,uBAArB;AACA,OAAOC,SAAP,MAAsB,wBAAtB;;AAEA,MAAMC,OAAO,GAAG,CAAC;AACfC,EAAAA,OADe;AAEfC,EAAAA,QAFe;AAGfC,EAAAA,GAHe;AAIfC,EAAAA,GAJe;AAKfC,EAAAA,aALe;AAMfC,EAAAA;AANe,CAAD,KAOV;AAAA,oBACsBX,QAAQ,CAACW,YAAD,CAD9B;AAAA;AAAA,QACGC,KADH;AAAA,QACUC,QADV;;AAEJ,QAAMC,UAAU,GAAG,CAACC,KAAD,EAAQC,IAAR,KAAiB;AAClC,UAAMC,QAAQ,GAAGF,KAAK,GAAGH,KAAH,GAAWI,IAAjC;AACAH,IAAAA,QAAQ,CAACI,QAAD,CAAR;AACAP,IAAAA,aAAa,CAACO,QAAD,CAAb,CAHkC,CAGT;AAC1B,GAJD;;AAMA,QAAMC,YAAY,GAAG,CAACC,MAAD,EAASC,IAAT,EAAeJ,IAAf,KAAwB;AAC3C,UAAMD,KAAK,GAAGH,KAAK,KAAKQ,IAAxB;AACA,WACE;AACE,MAAA,QAAQ,EAAEL,KADZ;AAEE,MAAA,OAAO,EAAE,MAAMD,UAAU,CAACC,KAAD,EAAQC,IAAR,CAF3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAIE;AACE,MAAA,KAAK,EAAE;AAAEK,QAAAA,OAAO,EAAEN,KAAK,GAAG,GAAH,GAAS;AAAzB,OADT;AAEE,MAAA,GAAG,EAAEI,MAFP;AAEe,MAAA,GAAG,EAAC,MAFnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJF,CADF;AAWD,GAbD;;AAeA,SACE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIb,OAAJ,CADF,EAEE;AAAK,IAAA,KAAK,EAAE;AAAEgB,MAAAA,IAAI,EAAE,CAAR;AAAWC,MAAAA,cAAc,EAAE;AAA3B,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGL,YAAY,CAACd,SAAD,EAAYI,GAAZ,EAAiBI,KAAK,GAAG,CAAzB,CADf,EAEE;AAAG,IAAA,KAAK,EAAE;AAAEY,MAAAA,QAAQ,EAAE,EAAZ;AAAgBC,MAAAA,UAAU,EAAE;AAA5B,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAiDb,KAAjD,CAFF,EAGGM,YAAY,CAACf,QAAD,EAAWM,GAAX,EAAgBG,KAAK,GAAG,CAAxB,CAHf,CADF,EAME;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIL,QAAJ,CANF,CAFF,CADF;AAaD,CA3CD;;AA6CAF,OAAO,CAACqB,SAAR,GAAoB;AAClBpB,EAAAA,OAAO,EAAEJ,SAAS,CAACyB,MADD;AAElBjB,EAAAA,aAAa,EAAER,SAAS,CAACc,IAFP;AAGlBL,EAAAA,YAAY,EAAET,SAAS,CAAC0B,MAHN,CAIlB;;AAJkB,CAApB;AAOA,eAAevB,OAAf","sourcesContent":["import React, { useState, Fragment } from \"react\";\nimport PropTypes from 'prop-types';\nimport PlusIcon from \"./images/plusicon.png\";\nimport MinusIcon from \"./images/minusicon.png\";\n\nconst Counter = ({\n  message,\n  dateText,\n  min,\n  max,\n  onChangeCount,\n  initialValue\n}) => {\n  const [count, setCount] = useState(initialValue);\n  const onSetCount = (limit, func) => {\n    const newCount = limit ? count : func;\n    setCount(newCount);\n    onChangeCount(newCount); // callback\n  };\n\n  const renderButton = (source, cant, func) => {\n    const limit = count === cant;\n    return (\n      <button\n        disabled={limit}\n        onClick={() => onSetCount(limit, func)}\n      >\n        <img\n          style={{ opacity: limit ? 0.1 : 1 }}\n          src={source} alt='icon'\n        />\n      </button>\n    );\n  };\n\n  return (\n    <Fragment>\n      <p>{message}</p>\n      <div style={{ flex: 1, justifyContent: \"center\" }}>\n        <div>\n          {renderButton(MinusIcon, min, count - 1)}\n          <p style={{ fontSize: 30, fontWeight: 'bold' }}>{count}</p>\n          {renderButton(PlusIcon, max, count + 1)}\n        </div>\n        <p>{dateText}</p>\n      </div>\n    </Fragment>\n  );\n};\n\nCounter.propTypes = {\n  message: PropTypes.string,\n  onChangeCount: PropTypes.func,\n  initialValue: PropTypes.number,\n  // etc..\n}\n\nexport default Counter;"]},"metadata":{},"sourceType":"module"}